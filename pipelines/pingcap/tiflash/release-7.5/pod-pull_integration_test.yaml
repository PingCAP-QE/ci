apiVersion: "v1"
kind: "Pod"
spec:
  containers:
  - image: "hub.pingcap.net/jenkins/docker:20.10.14-dind"
    imagePullPolicy: "IfNotPresent"
    name: "dockerd"
    env:
    - name: DOCKER_TLS_CERTDIR
      value: ""
    - name: DOCKER_HOST
      value: tcp://localhost:2375
    resources:
      limits:
        memory: "32Gi"
        cpu: "16000m"
      requests:
        memory: "10Gi"
        cpu: "5000m"
    readinessProbe:
      exec:
        command: ["docker", "info"]
      initialDelaySeconds: 10
      failureThreshold: 6
    securityContext:
      privileged: true
    tty: false
    volumeMounts:
    - mountPath: "/home/jenkins"
      name: "volume-0"
      readOnly: false
    - mountPath: "/tmp"
      name: "volume-3"
      readOnly: false
    - mountPath: "/home/jenkins/agent"
      name: "workspace-volume"
      readOnly: false
  - command:
    - "cat"
    env:
    - name: "DOCKER_HOST"
      value: "tcp://localhost:2375"
    image: "hub.pingcap.net/jenkins/docker:build-essential-java"
    imagePullPolicy: "Always"
    name: "docker"
    resources:
      requests:
        memory: "8Gi"
        cpu: "5000m"
    tty: true
    volumeMounts:
    - mountPath: "/home/jenkins"
      name: "volume-0"
      readOnly: false
    - mountPath: "/tmp"
      name: "volume-3"
      readOnly: false
    - mountPath: "/home/jenkins/agent"
      name: "workspace-volume"
      readOnly: false
  - image: "jenkins/inbound-agent:3148.v532a_7e715ee3-1"
    name: "jnlp"
    resources:
      requests:
        memory: "256Mi"
        cpu: "100m"
      limits:
        memory: "256Mi"
        cpu: "100m"
    volumeMounts:
    - mountPath: "/home/jenkins"
      name: "volume-0"
      readOnly: false
    - mountPath: "/tmp"
      name: "volume-3"
      readOnly: false
    - mountPath: "/home/jenkins/agent"
      name: "workspace-volume"
      readOnly: false
  volumes:
  - emptyDir:
      medium: ""
    name: "volume-0"
  - emptyDir:
      medium: ""
    name: "workspace-volume"
  - emptyDir:
      medium: ""
    name: "volume-3"
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                  - amd64
              - key: ci-nvme-high-performance
                operator: In
                values:
                  - "true"
