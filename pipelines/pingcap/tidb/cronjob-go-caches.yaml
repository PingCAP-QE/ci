apiVersion: batch/v1
kind: CronJob
metadata:
  name: clean-go-caches
  namespace: jenkins-tidb
spec:
  schedule: "@daily"
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          nodeSelector:
            resourcepool: ksyun-ci  
          containers:
            - name: go
              image: "hub.pingcap.net/jenkins/centos7_golang-1.19:latest"
              tty: true
              command: 
                - /bin/bash
                - -exec
              args:
                - |
                  # clean gomod cache when usage > 80%
                  gopath_used_percent=$(df -h | grep "$(go env GOPATH)" | awk '{print $5}' | grep -oE "[0-9]+")
                  echo "mount of $(go env GOPATH) usage is ${gopath_used_percent}%"
                  if (( gopath_used_percent > 80 )); then
                      echo "go mod cache is too large, I am cleaning it."
                      go clean -modcache -x
                      echo "cleaned."
                  fi

                  # clean cache when usage > 80%
                  gocache_used_percent=$(df -h | grep "$(go env GOCACHE)" | awk '{print $5}' | grep -oE "[0-9]+")
                  echo "mount of $(go env GOCACHE) usage is ${gocache_used_percent}%"
                  if (( gocache_used_percent > 80 )); then
                      echo "go build cache is too large, I am cleaning it."
                      go clean -cache -x
                      echo "cleaned."
                  fi
              env:
                - name: GOPATH
                  value: /share/.go
                - name: GOCACHE
                  value: /share/.cache/go-build
              volumeMounts:
                - name: gocache
                  mountPath: /share/.cache/go-build
                - name: gopathcache
                  mountPath: /share/.go              
              resources:
                requests:
                  memory: "128Mi"
                  cpu: "100m"
                limits:
                  memory: "512Mi"
                  cpu: "500m"
          volumes:           
            - name: gopathcache
              persistentVolumeClaim:
                claimName: gopathcache
            - name: gocache
              persistentVolumeClaim:
                claimName: gocache
