apiVersion: v1
kind: Pod
spec:
  securityContext:
    fsGroup: 1000
  containers:
    - name: golang
      # TODO(wuhuizuo): using standard bazel build image to shrink the image size
      # and keep image simple,so no need to refresh image to update basic bazel out data.
      image: hub.pingcap.net/ee/ci/base:v20230530-go1.20.4
      securityContext:
        privileged: true
      tty: true
      resources:
        limits:
          memory: 128Gi
          cpu: "32"
      env:
        - name: GOPATH
          value: /share/.go
        - name: GOCACHE
          value: /share/.cache/go-build
      volumeMounts:
        - name: gocache
          mountPath: /share/.cache/go-build
        - name: gopathcache
          mountPath: /share/.go
        - name: bazel-rc
          mountPath: /data/
          readOnly: true
        - name: containerinfo
          mountPath: /etc/containerinfo
      lifecycle:
        postStart:
          exec:
            command:
              - /bin/sh
              - /data/bazel-prepare-in-container.sh
    - name: deno
      image: "denoland/deno:1.31.2"
      command: [sh]
      tty: true
      env:
        - name: DENO_DIR
          value: /cache/deno
      resources:
        requests:
          memory: "128Mi"
          cpu: "100m"
        limits:
          memory: "512Mi"
          cpu: "500m"
      volumeMounts:
        - mountPath: /cache/deno
          name: deno-dir
    - name: net-tool
      image: wbitt/network-multitool
      tty: true
      resources:
        limits:
          memory: 128Mi
          cpu: 100m
    - name: report
      image: hub.pingcap.net/jenkins/python3-requests:latest
      tty: true
      resources:
        limits:
          memory: 256Mi
          cpu: 100m
  volumes:
    - name: deno-dir
      persistentVolumeClaim:
        claimName: deno-dir
    - name: gopathcache
      persistentVolumeClaim:
        claimName: gopathcache
    - name: gocache
      persistentVolumeClaim:
        claimName: gocache
    - name: bazel-rc
      secret:
        secretName: bazel
    - name: containerinfo
      downwardAPI:
        items:
          - path: cpu_limit
            resourceFieldRef:
              containerName: golang
              resource: limits.cpu
          - path: cpu_request
            resourceFieldRef:
              containerName: golang
              resource: requests.cpu
          - path: mem_limit
            resourceFieldRef:
              containerName: golang
              resource: limits.memory
          - path: mem_request
            resourceFieldRef:
              containerName: golang
              resource: requests.memory
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                  - amd64
