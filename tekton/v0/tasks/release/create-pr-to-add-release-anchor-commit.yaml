apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: create-pr-to-add-release-anchor-commit
  labels:
    app.kubernetes.io/version: "0.1"
  annotations:
    tekton.dev/pipelines.minVersion: "0.29.0"
    tekton.dev/categories: Deno
    tekton.dev/tags: deno
    tekton.dev/displayName: "sync owners"
    tekton.dev/platforms: "linux/amd64"
spec:
  description: >-
    Create pull request to update version placeholder "README.md" to github repository branch.
  params:
    - name: git-url
      description: repository clone url
      type: string
    - name: branch
      description: branch or tag to checkout. (branch, tag)
      type: string
      default: ""
  steps:
    - name: analyse
      image: ghcr.io/pingcap-qe/cd/utils/release:v2025.8.17-13-ga5750d9
      workingDir: /workspace
      script: |
        #!/bin/bash

        set -euo pipefail

        git_url=$(params.git-url)
        branch=$(params.branch)

        git clone "$git_url" --branch "$branch" source && cd source
        version=$(git describe --tags)

        function compare_versions() {
          if [[ $1 == $2 ]]; then
            echo 0
          elif [[ "$1" < "$2" ]]; then
            echo -1
          else
            echo 1
          fi
        }

        if [[ "$branch" =~ ^v[0-9]+\.[0-9]+\.[0-9]+-alpha$ ]]; then
          if [ "$version" = "$branch" ]; then
          echo "Current branch is up-to-date(version is: ${version}). Exiting."
            exit 1
          else
            echo -n "master" > /workspace/inner-results-branch
            echo -n "${branch#v}" > /workspace/inner-results-version
          fi
        elif [[ "$branch" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
          major_minor_version=$(echo "$branch" | cut -d'.' -f1-2)
          next_patch_version=$(echo "$branch" | awk -F. '{print $1"."$2"."($3+1)}')
          echo -n "release-${major_minor_version#v}" > /workspace/inner-results-branch
          echo -n "${next_patch_version#v}" > /workspace/inner-results-version
        elif [[ "$branch" =~ ^release-[0-9]+\.[0-9]+$ ]]; then
          major_minor_version=$(echo "$branch" | cut -d'-' -f2)
          compare_result=$(compare_versions "$version" "v$major_minor_version.0")
          if [ "$compare_result" -lt 0 ]; then
            echo -n "$branch" > /workspace/inner-results-branch
            echo -n "$major_minor_version.0" > /workspace/inner-results-version
          else
          echo "Current branch is up-to-date(version is: ${version}). Exiting."
            exit 1
          fi
        else
          echo "Invalid branch format: $branch"
          exit 1
        fi
    - name: create-pull-request
      image: denoland/deno:1.45.5
      script: |
        owner=$(basename $(dirname $(params.git-url)))
        repo=$(basename $(params.git-url) .git)

        echo "url=$(params.git-url)"
        echo "owner=${owner}"
        echo "repo=${repo}"
        echo "pr dest branch: $(cat /workspace/inner-results-branch)"
        echo "pr placeholder version: $(cat /workspace/inner-results-version)"

        deno run --allow-all https://github.com/PingCAP-QE/ci/raw/main/scripts/pingcap/add-placeholder-version-in-readme.ts \
          --owner=${owner} \
          --repo=${repo} \
          --branch=$(cat /workspace/inner-results-branch) \
          --placeholder=$(cat /workspace/inner-results-version) \
          --github_private_token=$(cat /etc/github/token)
  workspaces:
    - name: github
      description: Must includes a key `token`
      mountPath: /etc/github
