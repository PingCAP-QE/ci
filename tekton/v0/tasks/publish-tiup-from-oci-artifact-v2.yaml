apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: publish-tiup-from-oci-artifact-v2
spec:
  description: |
    The working flow:
    1. fetch the manifect config
    2. get the `.tiup` filed from the config.
    3. loop to publish to tiup mirror.
  params:
    - name: artifact-url
      description: |
        The full url of the pushed image, contain the tag part.
        It will parse the repo from it.
    - name: publisher-url
      description: Staging is http://publisher-staging-mirror.apps.svc, product is http://publisher-prod-mirror.apps.svc.
      default: http://publisher-staging-mirror.apps.svc
    - name: force-version
      description: >
        Force set the version.
        Default is the artifact version read from `org.opencontainers.image.version` of the manifest config.
      default: ""
  results:
    - name: request-ids
      type: array
  steps:
    - name: request-and-wait
      image: ghcr.io/pingcap-qe/ee-apps/publisher:v2025.6.29-1-g0a96470
      script: |
        #!/usr/bin/env bash
        set -eo pipefail

        # send event
        /app/publisher-cli --url $(params.publisher-url) tiup request-to-publish --body '{ "artifact_url": "$(params.artifact-url)" }' | jq '. // []' | tee $(results.request-ids.path)

        # wait for request statuses
        for request_id in $(jq -r '.[]' $(results.request-ids.path)); do
          echo "🔍 query for request id: ${request_id} ..."
          while true; do
            status=$(/app/publisher-cli --url $(params.publisher-url) tiup query-publishing-status --request-id "$request_id" | jq -r .)
            case "${status}" in
              "failed")
                echo "❌ Publishing failed"
                exit 1
                ;;
              "success")
                echo "✅ Publishing successful"
                break
                ;;
              "canceled")
                echo "💤 Publishing canceled"
                break
                ;;
              *)
                echo "⌛️ Status: ${status}"
                sleep 10
                ;;
            esac
          done
        done
