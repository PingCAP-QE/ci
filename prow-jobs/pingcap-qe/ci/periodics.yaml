# struct ref: https://pkg.go.dev/sigs.k8s.io/prow/pkg/config#Periodic
periodics:
  - name: periodic-crawl-ci-run-data
    decorate: true # need add this.
    cron: "0 * * * *" # @hourly
    hidden: true
    spec:
      activeDeadlineSeconds: 300
      containers:
        - name: main
          image: denoland/deno:2.2.3
          command:
            - deno
            - run
            - --allow-net
            - https://github.com/PingCAP-QE/ee-apps/raw/main/insight/crawlers/ci/prow-jobs.ts
          args: [--dsn=$(DSN)]
          env:
            - name: DSN
              valueFrom:
                secretKeyRef:
                  key: DSN
                  name: job-insight
          resources:
            requests:
              memory: 1Gi
              cpu: 200m
  - name: periodic-crawl-commits
    cron: "0 16 * * *" # Run at 16:00 UTC every day
    hidden: true
    decorate: true
    decoration_config:
      timeout: 6h
      ssh_key_secrets:
        - ssh-secret-ti-chi-bot
    clone_uri: git@github.com:{{.Org}}/{{.Repo}}.git
    extra_refs:
      - org: PingCAP-QE
        repo: gitinsight
        path: app
        base_ref: main
        clone_depth: 1
        workdir: true
      - org: PingCAP-QE
        repo: gitinsight-data
        base_ref: main
        path: data
        workdir: false
    max_concurrency: 1 # Only allow one instance of this job to run at a time
    spec:
      containers:
        - name: main
          image: ubuntu:latest
          env:
            - name: IDS_CSV_FILE
              value: /tmp/ids.csv
            - name: CRAWL_ORGS
              value: pingcap tikv tidbcloud PingCAP-QE
            - name: GITHUB_TOKEN
              valueFrom:
                secretKeyRef:
                  name: job-insight
                  key: GITHUB_TOKEN
            - name: GITHUB_USER
              valueFrom:
                secretKeyRef:
                  name: job-insight
                  key: GITHUB_USER
          volumeMounts:
            - name: insight-config
              mountPath: /tmp/ids.csv
              subPath: pingcap-ids.csv
            - name: github-token
              mountPath: /etc/github
              readOnly: true
          command:
            - /bin/bash
            - -ceo
            - pipefail
          args:
            - |
              # check tools
              which git || apt-get install -y git
              which curl || apt-get install -y curl
              which wget || apt-get install -y wget

              # Install dependencies
              apt-get update && apt-get install -y git curl wget

              # Set up pixi.
              curl -fsSL https://pixi.sh/install.sh | bash
              export PATH="$HOME/.pixi/bin:$PATH"
              pixi install
              # install some packages with pixi
              which gh || pixi global install gh

              # Prepare for crawl
              mkdir -p ../data/repos
              cp "$IDS_CSV_FILE" ../data/.ci/config/pingcap-ids.csv

              # Crawl.
              for org in $CRAWL_ORGS; do
                # Crawl commits in 10 years
                pixi run ../data/.ci/crawl_org_commits.sh $org ../data ../data/.ci/config 120
              done

              # Cleanup
              rm ../data/.ci/config/pingcap-ids.csv

              # Publish data.
              pushd ../data
                # Set git account
                git config user.name "ti-chi-bot[bot]"
                git config user.email "108142056+ti-chi-bot[bot]@users.noreply.github.com"

                # Checkout to a new branch with timestamp
                head_branch="auto/update-data-commits-$(date +%Y%m%d%H%M%S)"
                pr_title="Update commits data at $(date +%Y-%m-%d)"
                pr_desc="It is made by periodic jobs for data update. [skip ci]"

                git checkout -b $head_branch
                git add github

                git commit -m "${pr_title} [skip ci]"
                git push

                # create a pull request
                gh pr create --title "$pr_title" --body "$pr_desc" --head $head_branch --base main
                # Assert the folder `github/<org>/<org>` not exists.
                # Previously, we have a issue that created a duplicate level folder.
                if [ -d "github/${{ matrix.org }}/${{ matrix.org }}" ]; then
                  # close the pull request
                  gh pr close --delete-branch
                else
                  # merge the pull request
                  gh pr merge --auto --squash --delete-branch
                fi
              popd

          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              cpu: 2000m
              memory: 8Gi
      volumes:
        - name: insight-config
          secret:
            secretName: job-insight
        - name: github-token
          secret:
            secretName: github-token
