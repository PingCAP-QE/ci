# struct ref: https://pkg.go.dev/sigs.k8s.io/prow/pkg/config#Postsubmit
postsubmits:
  pingcap/tidb:
    - name: auto-handle-tidb-test-pr
      decorate: true
      decoration_config:
        skip_cloning: true
      skip_report: true
      optional: true
      max_concurrency: 3
      branches:
        - ^master$
        - ^feature/release-.*$
        - ^release-[0-9]+[.][0-9]+(-beta.[0-9]+)?$
        - ^release-[0-9]+[.][0-9]+(-[0-9]+-v[0-9]+[.][0-9]+[.][0-9]+(-[0-9]+)?)?$
      spec:
        containers:
          - name: main
            image: purelind/python3-requests:3.9.18-slim
            command: [bash, -ce]
            args:
              - |
                curl -L -O https://github.com/PingCAP-QE/ci/raw/main/scripts/pingcap/tidb/auto-handle-tidb-test-pr.py
                echo $PULL_BASE_SHA
                echo $PULL_BASE_REF
                python3 auto-handle-tidb-test-pr.py
            env:
              - name: GITHUB_API_TOKEN
                valueFrom:
                  secretKeyRef:
                    key: token
                    name: github-token
              - name: WEBHOOK_URL
                valueFrom:
                  secretKeyRef:
                    key: ci-job-auto-handle-tidb-test-pr-notify-webhook-url
                    name: ci-job-params-mono
            resources:
              limits:
                cpu: "500m"
                memory: 1Gi
              requests:
                cpu: "500m"
                memory: 1Gi
    - name: auto-sync-go-mods
      decorate: true
      decoration_config:
        timeout: 45m
        oauth_token_secret:
          name: github-token
          key: token
      skip_report: true
      optional: true
      skip_submodules: true
      max_concurrency: 3
      run_if_changed: go\.mod$
      branches:
        - ^master$
        - ^release-(6[.]5|7[.]1|7[.]5|8[.]1|8[.]5)$
      extra_refs:
        - org: pingcap-inc
          repo: enterprise-plugin
          base_ref: master
      spec:
        containers:
          - name: main
            image: golang:1.23
            env:
              - name: TARGET_FULL_REPO
                value: pingcap-inc/enterprise-plugin
              - name: GH_TOKEN
                valueFrom:
                  secretKeyRef:
                    key: token
                    name: github-token
            command: [bash, -ce]
            args:
              - |
                pushd ../../${TARGET_FULL_REPO}
                  git checkout "${PULL_BASE_REF}"
                  for modPath in audit/go.mod whitelist/go.mod; do
                    go run github.com/PingCAP-QE/ci/tools/gomod-sync@main --source=../../${REPO_OWNER}/${REPO_NAME}/go.mod --target=${modPath}
                  done
                  if git diff --cached --exit-code --name-status .; then
                    echo "ðŸ¤· No changes happened."
                    exit 0
                  fi
                popd

                # install `gh` tool
                type -p curl >/dev/null || ( apt update &&  apt install curl -y)
                curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg |  dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
                && chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \
                && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" |  tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
                && apt update \
                && apt install gh -y

                # commit and push the changes & create PR
                pushd ../../${TARGET_FULL_REPO}
                  # login and setup git
                  gh auth setup-git
                  git config user.email "ti-community-prow-bot@tidb.io"
                  git config user.name  "ti-chi-bot"

                  head_branch="bot/sync-gomod-with-${REPO_NAME}/${PULL_BASE_REF}"
                  git checkout -b "$head_branch"
                  commit_msg="*: sync go mods with ${REPO_OWNER}/${REPO_NAME}@${PULL_BASE_REF}"
                  git commit -m "$commit_msg"
                  git remote add origin https://github.com/${TARGET_FULL_REPO}.git
                  git remote -v
                  git push -f --set-upstream origin "$head_branch"

                  # create pull request
                  gh pr create \
                    --base "${PULL_BASE_REF}" \
                    --head "$head_branch" \
                    --title "$commit_msg" \
                    --body "Auto generated by CI/bot according the changes of ${REPO_OWNER}/${REPO_NAME}#${PULL_NUMBER}"
                popd
