global_definitions:
  branches: &branches
    - ^feature/v2$
  skip_if_only_changed: &skip_if_only_changed
    "(\\.(md|png|jpeg|jpg|gif|svg|pdf)|Dockerfile|OWNERS|OWNERS_ALIASES)$"
  decoration_config: &decoration_config
    timeout: 45m


# struct ref: https://pkg.go.dev/sigs.k8s.io/prow/pkg/config#Presubmit
presubmits:
  pingcap/tidb-operator:
    - name: pull-e2e
      decorate: true # need add this.
      decoration_config: *decoration_config
      always_run: false
      optional: true
      # skip_if_only_changed: *skip_if_only_changed
      branches: *branches
      spec:
        volumes:
          - name: docker-sock-dir
            emptyDir: {}
        containers:
          - name: dind-daemon
            image: docker:28.1-dind
            command: ["dockerd-entrypoint.sh"]
            env:
              - name: DOCKER_TLS_CERTDIR
                value: ""
            securityContext:
              privileged: true
            volumeMounts:
              - name: docker-sock-dir
                mountPath: /var/run
            resources:
              requests:
                memory: "4Gi"
                cpu: "1"
              limits:
                memory: "4Gi"
                cpu: "1"

          - name: e2e-runner
            image: docker:28.1-cli
            command: ["/bin/sh", "-ce"]
            args:
              - |
                set -ex
                
                # Install Go 1.23
                apk add --no-cache curl tar
                curl -fsSL https://go.dev/dl/go1.23.9.linux-amd64.tar.gz | tar -C /usr/local -xz
                export PATH=/usr/local/go/bin:$PATH
                export GOPATH=/go
                export GOCACHE=/tmp/go-cache
                
                echo "Go version: $(go version)"
                echo "Docker version: $(docker version --format '{{.Client.Version}}')"
                
                echo "Waiting for Docker daemon to be responsive..."
                timeout_seconds=120
                # Loop until docker info succeeds or timeout is reached
                start_time=$(date +%s)
                while ! docker info > /dev/null 2>&1; do
                  current_time=$(date +%s)
                  elapsed=$((current_time - start_time))
                  if [ $elapsed -ge $timeout_seconds ]; then
                    echo "Error: Docker daemon did not start within ${timeout_seconds} seconds." >&2
                    echo "Listing contents of /var/run to help debug:" >&2
                    ls -la /var/run || echo "Warning: Failed to list /var/run" >&2
                    exit 1
                  fi
                  echo "Waiting for Docker... $(date)"
                  sleep 5
                done
                echo "Docker daemon is responsive."
                
                echo "Running 'make e2e'..."
                make e2e
            volumeMounts:
              - name: docker-sock-dir
                mountPath: /var/run # Mount the shared socket directory
            resources:
              requests:
                memory: 32Gi
                cpu: "6"
              limits:
                memory: 32Gi
                cpu: "6"
