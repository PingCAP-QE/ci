global_definitions:
  skip_if_only_changed: &skip_if_only_changed "(\\.(md|png|jpeg|jpg|gif|svg|pdf|gitignore)|Dockerfile|OWNERS|OWNERS_ALIASES)$"

presubmits:
  tikv/raft-engine:
    - name: rust-nightly
      cluster: gcp-prow-ksyun
      decorate: true
      # max_concurrency: 1
      skip_if_only_changed: "(\\.(md)|OWNERS|OWNERS_ALIASES)$"
      branches:
        - ^master$
      spec:
        volumes:
          - name: cargo-cache
            persistentVolumeClaim:
              claimName: cargo-home-linux-amd64
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/arch
                  operator: In
                  values:
                    - amd64
        containers:
          - name: rust
            image: rust:1.85.0
            command: ["/bin/sh", "-c"]
            env:
              - name: RUST_BACKTRACE
                value: "1"
              # - name: CARGO_HOME
              #   value: /cargo-cache
            args:
              - |
                set -ex
                apt-get update; apt-get install -y cmake
                rustup show
                rustup toolchain install nightly-2023-12-31
                rustup default nightly-2023-12-31
                rustup component add rustfmt clippy rust-src
                cargo install grcov
                make format && git diff --exit-code
                make clippy

                # Run tests
                make test
                # Run asan tests
                RUSTFLAGS='-Zsanitizer=address' RUSTDOCFLAGS='-Zsanitizer=address' EXTRA_CARGO_ARGS='--verbose -Zbuild-std --target x86_64-unknown-linux-gnu' make test
            # volumeMounts:
            #   - name: cargo-cache
            #     mountPath: /cargo-cache

    - name: rust-stable
      cluster: gcp-prow-ksyun
      decorate: true
      max_concurrency: 1
      always_run: false
      branches:
        - ^master$
      spec:
        volumes:
          - name: cargo-cache
            persistentVolumeClaim:
              claimName: cargo-home-linux-amd64
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/arch
                  operator: In
                  values:
                    - amd64
        containers:
          - name: rust
            image: rust:1.85.0
            command: ["/bin/sh", "-c"]
            env:
              - name: WITH_STABLE_TOOLCHAIN
                value: "force"
              - name: RUST_BACKTRACE
                value: "1"
              # - name: CARGO_HOME
              #   value: /cargo-cache
            args:
              - |
                set -ex
                apt-get update; apt-get install -y cmake
                rustup component add rustfmt clippy
                make clippy
                make test
            # volumeMounts:
            #   - name: cargo-cache
            #     mountPath: /cargo-cache
