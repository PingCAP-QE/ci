global_definitions:
  branches: &branches
    - ^master$
    - ^release-[0-9]+[.][0-9]+$
  skip_if_only_changed: &skip_if_only_changed "(\\.(md|png|jpeg|jpg|gif|svg|pdf)|Dockerfile|OWNERS|OWNERS_ALIASES)$"

# struct ref: https://pkg.go.dev/sigs.k8s.io/prow/pkg/config#Postsubmit
postsubmits:
  tikv/pd:
    - name: auto-update-pd-gomod
      decorate: true
      decorate_config:
        skip_cloning: true
      skip_if_only_changed: *skip_if_only_changed
      run_if_changed: "^client/.*$"
      branches: *branches
      spec:
        containers:
          - name: build
            image: golang:1.23
            command: [bash, -ceo, pipefail]
            args:
              - |
                # clone tidb repo
                git clone https://github.com/pingcap/tidb.git --branch "${PULL_BASE_REF}" ../tidb && cd ../tidb

                ###### update mods that comes from pd repo #####
                new_pd="$(go list -m github.com/tikv/pd/client@${PULL_BASE_REF} | awk '{print $1 "@" $2}')"
                echo "new pd: $new_pd"
                go mod edit --require "$new_pd" go.mod

                # fast exit if no change on go.mod file
                git add go.mod
                if git diff --cached --exit-code --name-status go.mod; then
                  echo "ðŸ¤· No changes happened."
                  exit 0
                fi

                # update go.sum
                go mod tidy
                git add go.mod go.sum

                # install `gh` tool
                type -p curl >/dev/null || ( apt update &&  apt install curl -y)
                curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg |  dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
                && chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \
                && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" |  tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
                && apt update \
                && apt install gh -y

                # setup git
                git config user.email "ti-community-prow-bot@tidb.io"
                git config user.name  "ti-chi-bot"
                gh auth setup-git

                # commit and push the changes.
                head_branch="fix/${PULL_BASE_REF}/update-dep-pd"
                git checkout -b "$head_branch"
                commit_msg="chore(deps): bump go mod github.com/tikv/pd/client"
                git commit -m "$commit_msg"
                git push -f --set-upstream origin "$head_branch"

                # create pull request
                pr_desc="
                ### What problem does this PR solve?

                Auto generated by bot.
                Issue Number: ref #${REF_ISSUE_NUM}

                ### Release note

                \`\`\`release-note
                None
                \`\`\`
                "
                gh pr create \
                  --base $PULL_BASE_REF \
                  --head "$head_branch" \
                  --title "$commit_msg" \
                  --body "$pr_desc"
            env:
              - name: REF_ISSUE_NUM
                value: "1074"
              - name: GH_TOKEN
                valueFrom:
                  secretKeyRef:
                    key: token
                    name: github-token
            resources:
              requests:
                memory: 1Gi
                cpu: "500m"
              limits:
                memory: 2Gi
                cpu: "1"
