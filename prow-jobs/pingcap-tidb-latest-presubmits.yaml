# struct ref: https://pkg.go.dev/k8s.io/test-infra/prow/config#Presubmit
presubmits:
  pingcap/tidb:
    - name: pull-notify-when-compatibility-sections-changed
      decorate: true # need add this.
      decoration_config:
        skip_cloning: true
      skip_report: true
      optional: true
      run_if_changed: "^(session/bootstrap\\.go|sessionctx/variable/(sysvar|session|tidb_vars)\\.go|config/(config\\.go|config\\.toml\\.example)|br/tidb-lightning\\.toml|parser/parser\\.y)$"
      branches:
        - ^master$
      spec:
        nodeSelector:
          kubernetes.io/arch: amd64
        containers:
          - name: check
            image: denoland/deno:1.35.1
            command: [bash, -exec]
            args:
              - |
                deno run --allow-all https://github.com/PingCAP-QE/ci/raw/main/scripts/plugins/notify-by-lark.ts \
                  --title="TiDB pull request configuration change notify" \
                  --message="Configuration or variable section file changes are detected, please review and check it." \
                  --to_emails=yu.dong@pingcap.com \
                  --to_emails=eason.n@pingcap.com \
                  --to_emails=wuhui.zuo@pingcap.com \
                  --to_emails=lifu.wu@pingcap.com \
                  --links="https://github.com/${REPO_OWNER}/${REPO_NAME}/pull/${PULL_NUMBER}"
            env:
              - name: LARK_APP_ID
                valueFrom:
                  secretKeyRef:
                    name: chatops-lark
                    key: app-id
              - name: LARK_APP_SECRET
                valueFrom:
                  secretKeyRef:
                    name: chatops-lark
                    key: app-secret
            resources:
              limits:
                memory: 1Gi
                cpu: "500m"
    - name: pingcap/tidb/ghpr_build
      agent: jenkins
      decorate: false # need add this.
      skip_if_only_changed: "(\\.md|Dockerfile|OWNERS|OWNERS_ALIASES)$"
      context: idc-jenkins-ci-tidb/build
      trigger: "(?m)^/test (?:.*? )?build(?: .*?)?$"
      rerun_command: "/test build"
      branches:
        - ^master$
        - ^feature[_/].+
    - name: pingcap/tidb/ghpr_check
      agent: jenkins
      decorate: false # need add this.
      skip_if_only_changed: "(\\.md|Dockerfile|OWNERS|OWNERS_ALIASES)$"
      context: idc-jenkins-ci-tidb/check_dev
      trigger: "(?m)^/test (?:.*? )?check-dev(?: .*?)?$"
      rerun_command: "/test check-dev"
      branches:
        - ^master$
        - ^feature[_/].+
    - name: pingcap/tidb/ghpr_check2
      agent: jenkins
      decorate: false # need add this.
      skip_if_only_changed: "(\\.md|Dockerfile|OWNERS|OWNERS_ALIASES)$"
      context: idc-jenkins-ci-tidb/check_dev_2
      trigger: "(?m)^/test (?:.*? )?check-dev2(?: .*?)?$"
      rerun_command: "/test check-dev2"
      branches:
        - ^master$
        - ^feature[_/].+
    - name: pingcap/tidb/ghpr_mysql_test
      agent: jenkins
      decorate: false # need add this.
      skip_if_only_changed: "(\\.md|Dockerfile|OWNERS|OWNERS_ALIASES)$"
      context: idc-jenkins-ci-tidb/mysql-test
      trigger: "(?m)^/test (?:.*? )?mysql-test(?: .*?)?$"
      rerun_command: "/test mysql-test"
      branches:
        - ^master$
        - ^feature[_/].+
    - name: pingcap/tidb/ghpr_unit_test
      agent: jenkins
      decorate: false # need add this.
      skip_if_only_changed: "(\\.md|Dockerfile|OWNERS|OWNERS_ALIASES)$"
      context: idc-jenkins-ci-tidb/unit-test
      trigger: "(?m)^/test (?:.*? )?unit-test(?: .*?)?$"
      rerun_command: "/test unit-test"
      branches:
        - ^master$
        - ^feature[_/].+
    - name: pingcap/tidb/pull_integration_mysql_test
      agent: jenkins
      decorate: false # need add this.
      always_run: false
      context: pull-integration-mysql-test
      trigger: "(?m)^/test (?:.*? )?pull-integration-mysql-test(?: .*?)?$"
      rerun_command: "/test pull-integration-mysql-test"
      branches:
        - ^master$
    - name: pingcap/tidb/pull_integration_copr_test
      agent: jenkins
      decorate: false # need add this.
      always_run: false
      context: wip/pull-integration-copr-test
      skip_report: false
      trigger: "(?m)^/test (?:.*? )?pull-integration-copr-test(?: .*?)?$"
      rerun_command: "/test pull-integration-copr-test"
      branches:
        - ^master$
    - name: pingcap/tidb/pull_integration_jdbc_test
      agent: jenkins
      decorate: false # need add this.
      always_run: false
      context: wip/pull-integration-jdbc-test
      skip_report: false
      trigger: "(?m)^/test (?:.*? )?pull-integration-jdbc-test(?: .*?)?$"
      rerun_command: "/test pull-integration-jdbc-test"
      branches:
        - ^master$
    - name: pingcap/tidb/pull_e2e_test
      agent: jenkins
      decorate: false # need add this.
      always_run: false
      context: wip/pull-e2e-test
      skip_report: false
      trigger: "(?m)^/test (?:.*? )?pull-e2e-test(?: .*?)?$"
      rerun_command: "/test pull-e2e-test"
      branches:
        - ^master$
    - name: pingcap/tidb/pull_br_integration_test
      agent: jenkins
      decorate: false # need add this.
      context: pull-br-integration-test
      always_run: false
      skip_report: false
      trigger: "(?m)^/test (?:.*? )?pull-br-integration-test(?: .*?)?$"
      rerun_command: "/test pull-br-integration-test"
      branches:
        - ^master$
    - name: pingcap/tidb/pull_common_test
      agent: jenkins
      decorate: false # need add this.
      always_run: false
      context: wip/pull-common-test
      skip_report: false
      trigger: "(?m)^/test (?:.*? )?pull-common-test(?: .*?)?$"
      rerun_command: "/test pull-common-test"
      branches:
        - ^master$
    - name: pingcap/tidb/pull_integration_common_test
      agent: jenkins
      decorate: false # need add this.
      always_run: false
      context: wip/pull-integration-common-test
      skip_report: false
      trigger: "(?m)^/test (?:.*? )?pull-integration-common-test(?: .*?)?$"
      rerun_command: "/test pull-integration-common-test"
      branches:
        - ^master$
    - name: pingcap/tidb/pull_integration_ddl_test
      agent: jenkins
      decorate: false # need add this.
      always_run: false
      context: wip/pull-integration-ddl-test
      skip_report: false
      trigger: "(?m)^/test (?:.*? )?pull-integration-ddl-test(?: .*?)?$"
      rerun_command: "/test pull-integration-ddl-test"
      branches:
        - ^master$
    - name: pingcap/tidb/pull_sqllogic_test
      agent: jenkins
      decorate: false # need add this.
      always_run: false
      context: wip/pull-sqllogic-test
      skip_report: false
      trigger: "(?m)^/test (?:.*? )?pull-sqllogic-test(?: .*?)?$"
      rerun_command: "/test pull-sqllogic-test"
      branches:
        - ^master$
    - name: pingcap/tidb/pull_tiflash_test
      agent: jenkins
      decorate: false # need add this.
      always_run: false
      context: wip/pull-tiflash-test
      skip_report: false
      trigger: "(?m)^/test (?:.*? )?pull-tiflash-test(?: .*?)?$"
      rerun_command: "/test pull-tiflash-test"
      branches:
        - ^master$
    - name: pingcap/tidb/pull_mysql_client_test
      agent: jenkins
      decorate: false # need add this.
      always_run: false
      context: pull-mysql-client-test
      skip_report: false
      trigger: "(?m)^/test (?:.*? )?pull-mysql-client-test(?: .*?)?$"
      rerun_command: "/test pull-mysql-client-test"
      branches:
        - ^master$
    - name: pingcap/tidb/pull_integration_prisma_test
      agent: jenkins
      decorate: false # need add this.
      always_run: false
      context: pull-integration-prisma-test
      skip_report: false
      trigger: "(?m)^/test (?:.*? )?pull-integration-prisma-test(?: .*?)?$"
      rerun_command: "/test pull-integration-prisma-test"
      branches:
        - ^master$

